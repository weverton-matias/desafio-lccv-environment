version: "3.9"

services:
  database:
    image: postgres:16-alpine
    container_name: database
    restart: always
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - database_todo:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: desafio-lccv-api
    restart: always
    env_file: .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:${DB_PORT}/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "3333:3333"
    depends_on:
      database:
        condition: service_healthy

  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: desafio-lccv-front
    restart: always
    # environment:
    #   REACT_APP_API_URL: http://localhost:${APP_PORT}
    ports:
      - "3000:3000"
    depends_on:
      - api

volumes:
  database_todo:
    name: database_todo
